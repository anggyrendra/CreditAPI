// <auto-generated />
using System;
using CreditAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CreditAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250816114340_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreditAPI.Models.Angsuran", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AngsuranKe")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("JatuhTempo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Jumlah")
                        .HasColumnType("numeric");

                    b.Property<decimal>("JumlahAngsuran")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("JumlahBayar")
                        .HasColumnType("numeric");

                    b.Property<Guid>("KreditId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Lunas")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PengajuanId")
                        .HasColumnType("uuid");

                    b.Property<bool>("StatusLunas")
                        .HasColumnType("boolean");

                    b.Property<decimal>("SudahDibayar")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("TanggalBayar")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("KreditId");

                    b.HasIndex("PengajuanId");

                    b.ToTable("Angsurans");
                });

            modelBuilder.Entity("CreditAPI.Models.Kredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Angsuran")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Bunga")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Plafon")
                        .HasColumnType("numeric");

                    b.Property<int>("Tenor")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Plafon");

                    b.HasIndex("Tenor");

                    b.ToTable("Kredits");
                });

            modelBuilder.Entity("CreditAPI.Models.PengajuanKredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AngsuranPerBulan")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Bunga")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Plafon")
                        .HasColumnType("numeric");

                    b.Property<int>("Tenor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PengajuanKredits");
                });

            modelBuilder.Entity("CreditAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CreditAPI.Models.Angsuran", b =>
                {
                    b.HasOne("CreditAPI.Models.Kredit", "Kredit")
                        .WithMany("Angsurans")
                        .HasForeignKey("KreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreditAPI.Models.PengajuanKredit", "Pengajuan")
                        .WithMany("Angsurans")
                        .HasForeignKey("PengajuanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kredit");

                    b.Navigation("Pengajuan");
                });

            modelBuilder.Entity("CreditAPI.Models.Kredit", b =>
                {
                    b.Navigation("Angsurans");
                });

            modelBuilder.Entity("CreditAPI.Models.PengajuanKredit", b =>
                {
                    b.Navigation("Angsurans");
                });
#pragma warning restore 612, 618
        }
    }
}
